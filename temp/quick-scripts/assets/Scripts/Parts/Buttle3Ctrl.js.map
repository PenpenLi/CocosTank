{"version":3,"sources":["Buttle3Ctrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Parts","sourcesContent":["import PlayerOperationCtrl from './PlayerOperationCtrl';\r\nimport WebSocketManage from '../Unit/WebSocketManage';\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    private WebSocket: WebSocketManage = null;\r\n    private bullet: cc.RigidBody;\r\n    private OperationCtrl: PlayerOperationCtrl = null;\r\n    start () {\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        this.WebSocket = cc.find('WebScoket').getComponent(WebSocketManage);\r\n        var _self = this;\r\n        this.OperationCtrl = cc.find('Canvas/BattlePagePanel/BattleBox/operation').getComponent(PlayerOperationCtrl);\r\n        this.bullet = this.node.getComponent(cc.RigidBody);\r\n        var speed = 500;\r\n        var x = speed * Math.sin(Math.PI * this.node.rotation / 180)\r\n        var y = speed * Math.cos(Math.PI * this.node.rotation / 180)\r\n        this.bullet.linearVelocity = new cc.Vec2(x, y);\r\n    }\r\n    onCollisionEnter(other, self) {\r\n        var scoreType = 0;\r\n        if(other.node.name === 'tank_1') scoreType = 1;\r\n        this.WebSocket.sendMessage({\r\n            msg: 25,\r\n            data: {\r\n                scoreType: scoreType,\r\n                buttleName: this.node.name\r\n            }\r\n        })\r\n    }\r\n    onBeginContact(contact, selfCollider, otherCollider) {\r\n    }\r\n    public boom() {\r\n        var _self = this;\r\n        for(let i = 0; i < 360 / 30; i++) {\r\n            var bullet = _self.OperationCtrl.generateBullet({\r\n                name: `tank_buttle_${i}`,\r\n                type: 1,\r\n                bulletType: 1,\r\n                rotation: i * 30,\r\n                scale: _self.node.scale,\r\n                x: _self.node.x,\r\n                y: _self.node.y\r\n            }, 0)\r\n            _self.node.parent.addChild(bullet);\r\n        }\r\n        _self.node.destroy();\r\n    }\r\n    update (dt) {}\r\n}\r\n"]}
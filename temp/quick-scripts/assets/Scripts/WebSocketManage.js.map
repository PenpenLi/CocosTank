{"version":3,"sources":["WebSocketManage.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAE5C;IAA6C,mCAAY;IAAzD;;IA0CA,CAAC;IAtCG,+BAAK,GAAL;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;QACjE,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,UAAU,KAAK;YAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAA;QACD,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,UAAU,KAAK;YAC7B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,UAAU,KAAK;YAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAAC;QACF,SAAS;QACT,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,UAAU,KAAK;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;YAC3B,CAAC;QACL,CAAC,CAAC;IAEN,CAAC;IACD,oCAAoC;IACpC,iDAAiD;IACjD,6BAA6B;IAC7B,IAAI;IACJ;;;;;OAKG;IACI,qCAAW,GAAlB,UAAmB,WAAW,EAAE,WAA0B;QAA1B,4BAAA,EAAA,kBAA0B;QACtD,cAAc;QACd,IAAI,CAAC,WAAW,GAAI,WAAW,CAAC;QAChC,OAAO;QACP,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC1C,MAAM;QACN,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAzCgB,eAAe;QADnC,OAAO;OACa,eAAe,CA0CnC;IAAD,sBAAC;CA1CD,AA0CC,CA1C4C,EAAE,CAAC,SAAS,GA0CxD;kBA1CoB,eAAe","file":"","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class WebSocketManage extends cc.Component {\r\n    public ws: WebSocket;\r\n    public callbackObj: any;\r\n    public funName: string;\r\n    start() {\r\n        let self = this;\r\n        this.ws = new WebSocket(\"ws://172.17.0.13:8080/tankWar/echo.do\");\r\n        this.ws.onopen = function (event) {\r\n            console.log(\"服务器已打开\");\r\n        }\r\n        this.ws.onerror = function (event) {\r\n            console.log(\"连接服务器失败\");\r\n        };\r\n        this.ws.onclose = function (event) {\r\n            console.log(\"服务器关闭\");\r\n        };\r\n        // 监听消息接收\r\n        this.ws.onmessage = function (event) {\r\n            if (self.callbackObj != null) {\r\n                self.callbackObj(event)\r\n            }\r\n        };\r\n\r\n    }\r\n    // public sendMessage(JSONmessage) {\r\n    //     let message = JSON.stringify(JSONmessage);\r\n    //     this.ws.send(message);\r\n    // }\r\n    /**\r\n     * \r\n     * @param JSONmessage 消息内容\r\n     * @param callbackObj 回调对象\r\n     * @param funName 回调方法名\r\n     */\r\n    public sendMessage(JSONmessage, callbackObj: Object = null) {\r\n        //获得回调对象和回调方法名\r\n        this.callbackObj =  callbackObj;\r\n        //转为字符串\r\n        let message = JSON.stringify(JSONmessage);\r\n        //发送消息\r\n        this.ws.send(message);\r\n    }\r\n}\r\n"]}
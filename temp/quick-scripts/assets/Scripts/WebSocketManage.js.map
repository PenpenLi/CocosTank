{"version":3,"sources":["WebSocketManage.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;IAA6C,mCAAY;IAAzD;;IA8CA,CAAC;IA1CG,+BAAK,GAAL;QAEI,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC;QACtE,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,UAAS,KAAK;YAE3B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAA;QACD,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,UAAU,KAAK;YAE7B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,UAAU,KAAK;YAE7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAAC;QACF,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,QAAQ;QACR,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,UAAS,KAAK;YAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAC7B,CAAC;gBACG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,CAAC;YAC9D,CAAC;QACL,CAAC,CAAC;IAEN,CAAC;IACD;;;;;OAKG;IACI,qCAAW,GAAlB,UAAmB,WAAW,EAAE,WAAyB,EAAE,OAAqB;QAAhD,4BAAA,EAAA,kBAAyB;QAAE,wBAAA,EAAA,cAAqB;QAE5E,cAAc;QACd,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO;QACP,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC1C,MAAM;QACN,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IA7CgB,eAAe;QADnC,OAAO;OACa,eAAe,CA8CnC;IAAD,sBAAC;CA9CD,AA8CC,CA9C4C,EAAE,CAAC,SAAS,GA8CxD;kBA9CoB,eAAe","file":"","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n@ccclass\r\nexport default class WebSocketManage extends cc.Component {\r\n    public ws:WebSocket;\r\n    public callbackObj:Object;\r\n    public funName:string;\r\n    start () \r\n    {\r\n        this.ws = new WebSocket(\"ws://172.17.0.13:8080/tankWar/websocket.do\");\r\n        this.ws.onopen = function(event)\r\n        {\r\n            console.log(\"服务器已打开\");\r\n        }\r\n        this.ws.onerror = function (event) \r\n        {\r\n            console.log(\"连接服务器失败\");\r\n        };\r\n        this.ws.onclose = function (event) \r\n        {\r\n            console.log(\"服务器关闭\");\r\n        };\r\n        let that = this;\r\n        //监听消息接收\r\n        this.ws.onmessage = function(event)\r\n        {\r\n            if (that.callbackObj != null)\r\n            {\r\n                eval(\"that.callbackObj.\" + that.funName + \"(event.data)\");\r\n            }\r\n        };\r\n        \r\n    }\r\n    /**\r\n     * \r\n     * @param JSONmessage 消息内容\r\n     * @param callbackObj 回调对象\r\n     * @param funName 回调方法名\r\n     */\r\n    public sendMessage(JSONmessage, callbackObj:Object = null, funName:string = null)\r\n    {\r\n        //获得回调对象和回调方法名\r\n        this.callbackObj = callbackObj;\r\n        this.funName = funName;\r\n        //转为字符串\r\n        let message = JSON.stringify(JSONmessage);\r\n        //发送消息\r\n        this.ws.send(message);\r\n    }\r\n}\r\n"]}
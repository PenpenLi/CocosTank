{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Parts/assets\\Scripts\\Parts\\PropsCtrl.ts"],"names":[],"mappings":";;;;;AAAA,6DAAwD;AACxD,iDAA4C;AAC5C,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAsC,4BAAY;IADlD;QAAA,qEA2CC;QAzCW,qBAAe,GAAG,IAAI,CAAC;;QAwC/B,iBAAiB;IACrB,CAAC;IAxCG,wBAAK,GAAL;QAAA,iBAWC;QAVG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,UAAU,CAAC;YACP,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,UAAU,CAAC;gBACP,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;gBAClC,IAAG,KAAI,CAAC,IAAI,EAAC;oBACT,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;iBACvB;YACL,CAAC,EAAE,IAAI,CAAC,CAAA;QACZ,CAAC,EAAE,KAAK,CAAC,CAAA;IACb,CAAC;IACD,UAAU;IACV,gCAAa,GAAb;QAAA,iBAUC;QATG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;YAC9B,IAAG,CAAC,KAAI,CAAC,IAAI;gBAAE,OAAO;YACtB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACvB,UAAU,CAAC;gBACP,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACxB,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC,EAAE,GAAG,CAAC,CAAA;QACX,CAAC,EAAE,GAAG,CAAC,CAAA;IACX,CAAC;IACD,OAAO;IACP,mCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QACvD,IAAI,eAAe,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,SAAI,QAAU,CAAA;QACtD,IAAI,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,YAAY,CAAC,oBAAU,CAAC,CAAC,UAAU,CAAC;QACvF,IAAG,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC/B,EAAE,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC,YAAY,CAAC,6BAAmB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAA;SAC/H;aAAM;YACH,EAAE,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC,YAAY,CAAC,6BAAmB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAA;SAC5H;QACD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,WAAW,EAAE,UAAS,GAAG,EAAE,WAAW;YACxE,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;QACjE,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAxCgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA0C5B;IAAD,eAAC;CA1CD,AA0CC,CA1CqC,EAAE,CAAC,SAAS,GA0CjD;kBA1CoB,QAAQ","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Parts","sourcesContent":["import PlayerOperationCtrl from './PlayerOperationCtrl';\r\nimport BattleCtrl from '../Page/BattleCtrl';\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    private nodeDestoryTime = null;\r\n    start () {\r\n        var self = this;\r\n        setTimeout(() => {\r\n            self.onNodeTwinkle();\r\n            setTimeout(() => {\r\n                clearTimeout(self.nodeDestoryTime)\r\n                if(this.node){\r\n                    self.node.destroy();\r\n                }\r\n            }, 3000)\r\n        }, 12000)\r\n    }\r\n    // 消失前三秒闪烁\r\n    onNodeTwinkle() {\r\n        var self = this;\r\n        this.nodeDestoryTime = setTimeout(() => {\r\n            if(!this.node) return;\r\n            self.node.opacity = 20;\r\n            setTimeout(() => {\r\n                self.node.opacity = 200;\r\n                self.onNodeTwinkle();\r\n            }, 200) \r\n        }, 200)\r\n    }\r\n    // 碰撞事件\r\n    onCollisionEnter(other, self) {\r\n        var propType = parseInt(this.node.name.substring(5, 6))\r\n        var spriteFrameName = `${other.node.name}_${propType}`\r\n        var playerName = cc.find('Canvas/BattlePagePanel').getComponent(BattleCtrl).playerName;\r\n        if(other.node.name === playerName) {\r\n            cc.find('Canvas/BattlePagePanel/BattleBox/operation').getComponent(PlayerOperationCtrl).player.current.buttleType = propType\r\n        } else {\r\n            cc.find('Canvas/BattlePagePanel/BattleBox/operation').getComponent(PlayerOperationCtrl).player.vice.buttleType = propType\r\n        }\r\n        cc.loader.loadRes(spriteFrameName, cc.SpriteFrame, function(err, spriteFrame) {\r\n            other.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        })\r\n        self.node.destroy();\r\n    }\r\n    // update (dt) {}\r\n}\r\n"]}